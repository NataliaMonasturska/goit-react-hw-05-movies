{"version":3,"file":"static/js/541.b6bd6e63.chunk.js","mappings":"wQAAA,IAAMA,EAAa,mCACbC,EAAW,gCAEJC,EAAmB,WAC9B,OAAOC,MAAM,GAAD,OAAIF,EAAJ,sCAA0CD,IAAcI,MAClE,SAAAC,GACE,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GAEJ,EAEYC,EAAiB,SAAAC,GAC5B,OAAOT,MAAM,GAAD,OACPF,EADO,gCACyBD,EADzB,kBAC6CY,IACvDR,MAAK,SAAAC,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,EAEYG,EAAkB,SAAAC,GAC7B,OAAOX,MAAM,GAAD,OAAIF,EAAJ,iBAAqBa,EAArB,oBAAwCd,IAAcI,MAChE,SAAAC,GACE,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GAEJ,EAEYK,EAAe,SAAAD,GAC1B,OAAOX,MAAM,GAAD,OACPF,EADO,iBACUa,EADV,4BACqCd,IAC/CI,MAAK,SAAAC,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,EACYM,EAAkB,SAAAF,GAC3B,OAAOX,MAAM,GAAD,OACPF,EADO,iBACUa,EADV,4BACqCd,IAC/CI,MAAK,SAAAC,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,C,2HC7CGO,EAAMC,EAAAA,GAAAA,IAAH,yHAOHC,EAAKD,EAAAA,GAAAA,GAAH,8KASFE,EAAKF,EAAAA,GAAAA,GAAH,6iBAoBFG,EAAQH,EAAAA,GAAAA,EAAH,wFAMLI,EAAeJ,EAAAA,GAAAA,IAAH,0CAGZK,EAAqBL,EAAAA,GAAAA,IAAH,yIAiDxB,UAzCa,WACX,OAAkCM,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQZ,GAAYa,EAAAA,EAAAA,MAAZb,QAYR,OAVAc,EAAAA,EAAAA,YAAU,YACRb,EAAAA,EAAAA,IAAaD,GACVV,MAAK,SAAAyB,GACJH,EAAaG,EAAKC,KACnB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,GACJ,GAAE,CAAClB,KAGF,SAACK,EAAD,UACGM,EAAUS,OAAS,GAClBT,EAAUU,KAAI,SAAAC,GACZ,OACE,UAAChB,EAAD,YACE,SAACE,EAAD,UACsB,OAAnBc,EAAEC,mBAA4CC,IAAnBF,EAAEC,cAC5B,SAACpB,EAAD,CACEsB,IAAG,yCAAoCH,EAAEC,cACzCG,IAAKJ,EAAEK,QAGT,SAACxB,EAAD,CAAKsB,IAAKG,EAAYF,IAAKJ,EAAEK,UAGjC,UAAClB,EAAD,YACE,SAACF,EAAD,UAAQe,EAAEK,QACV,uCAAeL,EAAEO,kBAbZP,EAAEQ,GAiBd,KAGR,C","sources":["components/Api.js","components/Cast/Cast.js"],"sourcesContent":["const MY_API_KEY = 'ceffe16ccd7d46ce9932d25cc21ec8d8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovie = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getSearchMovie = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${MY_API_KEY}&query=${query}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${MY_API_KEY}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\nexport const getMovieReviews = movieId => {\n    return fetch(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${MY_API_KEY}`\n    ).then(response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    });\n  };\n  \n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCast } from '../../components/Api';\nimport styled from 'styled-components';\nimport DefaultImg from '../../Images/DefaultImg.jpg';\nconst Img = styled.img`\n  width: 100%;\n  height: 100%;\n  display: block;\n  margin-bottom: 5px;\n  object-fit: cover;\n`;\nconst Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  margin-left: auto;\n  margin-right: auto;\n  margin: -35px;\n  padding: 0;\n`;\nconst Li = styled.li`\n  width: 300px;\n  height: 525px;\n  margin: 35px;\n  border: 1px solid black;\n  border-radius: 5px;\n  background-color: white;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.2;\n  box-shadow: 14px 14px 28px rgba(0, 0, 0, 0.25),\n    0 10px 10px rgba(0, 0, 0, 0.22);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    box-shadow: 14px 25px 40px rgba(0, 0, 0, 0.25),\n      0 10px 10px rgba(0, 0, 0, 0.22);\n    transform: scale(1.1);\n  }\n`;\nconst Title = styled.p`\n  text-align: center;\n  line-height: 1.3;\n  font-size: 20px;\n`;\n\nconst ContainerImg = styled.div`\n  height: 450px;\n`;\nconst ContainerTitleCast = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  text-align: center;\n  height: 75px;\n`;\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId)\n      .then(data => {\n        setMovieCast(data.cast);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  return (\n    <Ul>\n      {movieCast.length > 0 &&\n        movieCast.map(c => {\n          return (\n            <Li key={c.id}>\n              <ContainerImg>\n                {c.profile_path !== null && c.profile_path !== undefined ? (\n                  <Img\n                    src={`https://image.tmdb.org/t/p/w500${c.profile_path}`}\n                    alt={c.name}\n                  />\n                ) : (\n                  <Img src={DefaultImg} alt={c.name} />\n                )}\n              </ContainerImg>\n              <ContainerTitleCast>\n                <Title>{c.name}</Title>\n                <p>Character: {c.character}</p>\n              </ContainerTitleCast>\n            </Li>\n          );\n        })}\n    </Ul>\n  );\n};\n\nexport default Cast;\n"],"names":["MY_API_KEY","BASE_URL","getTrendingMovie","fetch","then","response","ok","json","Promise","reject","Error","getSearchMovie","query","getMovieDetails","movieId","getMovieCast","getMovieReviews","Img","styled","Ul","Li","Title","ContainerImg","ContainerTitleCast","useState","movieCast","setMovieCast","useParams","useEffect","data","cast","catch","error","console","length","map","c","profile_path","undefined","src","alt","name","DefaultImg","character","id"],"sourceRoot":""}
{"version":3,"file":"static/js/75.1325b27f.chunk.js","mappings":"uQAAA,IAAMA,EAAa,mCACbC,EAAW,gCAEJC,EAAmB,WAC9B,OAAOC,MAAM,GAAD,OAAIF,EAAJ,sCAA0CD,IAAcI,MAClE,SAAAC,GACE,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GAEJ,EAEYC,EAAiB,SAAAC,GAC5B,OAAOT,MAAM,GAAD,OACPF,EADO,gCACyBD,EADzB,kBAC6CY,IACvDR,MAAK,SAAAC,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,EAEYG,EAAkB,SAAAC,GAC7B,OAAOX,MAAM,GAAD,OAAIF,EAAJ,iBAAqBa,EAArB,oBAAwCd,IAAcI,MAChE,SAAAC,GACE,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GAEJ,EAEYK,EAAe,SAAAD,GAC1B,OAAOX,MAAM,GAAD,OACPF,EADO,iBACUa,EADV,4BACqCd,IAC/CI,MAAK,SAAAC,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,EACYM,EAAkB,SAAAF,GAC3B,OAAOX,MAAM,GAAD,OACPF,EADO,iBACUa,EADV,4BACqCd,IAC/CI,MAAK,SAAAC,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,C,oGCKH,UAlDa,WACX,OAA4CO,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAkBjB,OAhBAC,EAAAA,EAAAA,YAAU,WAERH,GAAa,IACbnB,EAAAA,EAAAA,MACGE,MAAK,SAAAqB,GACJN,EAAkBM,EAAKC,QAExB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,IACAE,SAAQ,WACPT,GAAa,EACd,GACJ,GAAE,KAGD,SAAC,KAAD,WACID,IACA,iCACE,SAAC,EAAAW,GAAD,8BAEA,SAAC,EAAAC,GAAD,UACGd,EAAee,OAAS,GACvBf,EAAegB,KAAI,SAAAC,GAAK,OACtB,SAAC,EAAAC,GAAD,WACE,UAAC,KAAD,CAAMC,GAAE,kBAAaF,EAAMG,IAAMC,MAAO,CAAEC,KAAMlB,GAAhD,WACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEmB,IAAG,yCAAoCN,EAAMO,aAC7CC,IAAKR,EAAMS,WAGf,SAAC,KAAD,WACE,SAAC,KAAD,UAAQT,EAAMS,cATXT,EAAMG,GADO,UAoBrC,C","sources":["components/Api.js","pages/Home/Home.js"],"sourcesContent":["const MY_API_KEY = 'ceffe16ccd7d46ce9932d25cc21ec8d8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovie = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getSearchMovie = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${MY_API_KEY}&query=${query}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${MY_API_KEY}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\nexport const getMovieReviews = movieId => {\n    return fetch(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${MY_API_KEY}`\n    ).then(response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    });\n  };\n  \n","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getTrendingMovie } from '../../components/Api';\nimport {H1, Img, Ul, Li, Title,ContainerImg, ContainerTitle, ContainerHome} from '../../components/styled'\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    \n    setIsLoading(true);\n    getTrendingMovie()\n      .then(data => {\n        setTrendingMovies(data.results);\n        // console.log(data.results);\n      })\n      .catch(error => {\n        console.error(error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <ContainerHome>\n      {!isLoading && (\n        <>\n          <H1>Trending today</H1>\n\n          <Ul>\n            {trendingMovies.length > 0 &&\n              trendingMovies.map(Movie => (\n                <Li key={Movie.id}>\n                  <Link to={`/movies/${Movie.id}`} state={{ from: location }}>\n                    <ContainerImg>\n                      <Img\n                        src={`https://image.tmdb.org/t/p/w500${Movie.poster_path}`}\n                        alt={Movie.title}\n                      />\n                    </ContainerImg>\n                    <ContainerTitle>\n                      <Title>{Movie.title}</Title>\n                    </ContainerTitle>\n                  </Link>\n                </Li>\n              ))}\n          </Ul>\n        </>\n      )}\n    </ContainerHome>\n  );\n};\nexport default Home;\n"],"names":["MY_API_KEY","BASE_URL","getTrendingMovie","fetch","then","response","ok","json","Promise","reject","Error","getSearchMovie","query","getMovieDetails","movieId","getMovieCast","getMovieReviews","useState","trendingMovies","setTrendingMovies","isLoading","setIsLoading","location","useLocation","useEffect","data","results","catch","error","console","finally","H1","Ul","length","map","Movie","Li","to","id","state","from","src","poster_path","alt","title"],"sourceRoot":""}
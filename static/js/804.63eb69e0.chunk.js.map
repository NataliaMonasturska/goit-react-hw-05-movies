{"version":3,"file":"static/js/804.63eb69e0.chunk.js","mappings":"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","sources":["components/Api.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["const MY_API_KEY = 'ceffe16ccd7d46ce9932d25cc21ec8d8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovie = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getSearchMovie = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${MY_API_KEY}&query=${query}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${MY_API_KEY}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\nexport const getMovieReviews = movieId => {\n    return fetch(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${MY_API_KEY}`\n    ).then(response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    });\n  };\n  \n","import {\n  Link,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { getMovieDetails } from '../../components/Api'\nimport { RotatingLines } from 'react-loader-spinner';\nimport {GoBack, Container,About, ContainerImgAndAbout, TitleDetails ,Text,  Genres, GenresList, Genre,AdditionalList,AdditionalInformationContainer,ItemCastReviews ,StyledLink,Loader,ContainerOutlet,ContainerImg, Img } from '../../components/styled'\n\nconst Scrolling = require('react-scroll');\nconst scroll = Scrolling.animateScroll;\n\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [releaseDate, setReleaseDate] = useState('');\n  const [genres, setGenres] = useState([]);\n  const location = useLocation();\n  const linkToBack = location.state?.from ?? '/';\n  const YearNormalize = releaseDate.slice(0, 4);\n  const percent = Math.round(movie.vote_average * 10);\n  const overview = movie.overview;\n  const { movieId } = useParams();\n  const img =\n    movie.poster_path !== null && movie.poster_path !== undefined\n      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n      : '';\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(data => {\n      setMovie(data);\n      setReleaseDate(data.release_date);\n      setGenres(data.genres);\n    });\n  }, [movieId]);\n\n  const scrolling = () => {\n    scroll.scrollTo(600);\n  };\n\n  return (\n    <Container>\n      <Link to={linkToBack}>\n        <GoBack>Go back</GoBack>\n      </Link>\n      <ContainerImgAndAbout>\n        <ContainerImg>\n          <Img src={`${img}`} alt={movie.title} />\n        </ContainerImg>\n        <About>\n          <TitleDetails>\n            {movie.title} ({YearNormalize})\n          </TitleDetails>\n          <p>User Score: {percent}%</p>\n          <Text>Overview</Text>\n          <p>{overview}</p>\n          <Genres>Genres</Genres>\n          <GenresList>\n            {genres.length > 0 &&\n              genres.map(genre => (\n                <Genre key={genre.id}>\n                  <p>{genre.name}</p>\n                </Genre>\n              ))}\n          </GenresList>\n        </About>\n      </ContainerImgAndAbout>\n      <AdditionalInformationContainer >\n        <p>Additional information</p>\n        <AdditionalList>\n          <ItemCastReviews>\n            <StyledLink to=\"cast\" state={{ from: location.state.from }} onClick={scrolling}>Cast</StyledLink>\n          </ItemCastReviews>\n          <ItemCastReviews>\n            <StyledLink to=\"reviews\"state={{ from: location.state.from }} onClick={scrolling}>Reviews</StyledLink>\n          </ItemCastReviews>\n        </AdditionalList>\n      </AdditionalInformationContainer>\n      <ContainerOutlet>\n        <Suspense\n          fallback={\n            <Loader>\n              <RotatingLines\n                strokeColor=\"#3f51b5\"\n                strokeWidth=\"5\"\n                animationDuration=\"0.75\"\n                width=\"150\"\n                visible={true}\n              />\n            </Loader>\n          }\n        >\n          <Outlet />\n        </Suspense>\n      </ContainerOutlet>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MY_API_KEY","BASE_URL","getTrendingMovie","fetch","then","response","ok","json","Promise","reject","Error","getSearchMovie","query","getMovieDetails","movieId","getMovieCast","getMovieReviews","scroll","require","animateScroll","useState","movie","setMovie","releaseDate","setReleaseDate","genres","setGenres","location","useLocation","linkToBack","state","from","YearNormalize","slice","percent","Math","round","vote_average","overview","useParams","img","poster_path","undefined","useEffect","data","release_date","scrolling","scrollTo","to","src","alt","title","length","map","genre","name","id","onClick","Suspense","fallback","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}
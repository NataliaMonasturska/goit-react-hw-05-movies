{"version":3,"file":"static/js/115.1fec36df.chunk.js","mappings":"qNAsDA,UAzCa,WACX,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GACVI,MAAK,SAAAC,GACJN,EAAaM,EAAKC,KACnB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,GACJ,GAAE,CAACR,KAGF,SAAC,EAAAU,GAAD,UACGZ,EAAUa,OAAS,GAClBb,EAAUc,KAAI,SAAAC,GACZ,OACE,UAAC,EAAAC,GAAD,YACE,SAAC,KAAD,UACsB,OAAnBD,EAAEE,mBAA4CC,IAAnBH,EAAEE,cAC5B,SAAC,KAAD,CACEE,IAAG,yCAAoCJ,EAAEE,cACzCG,IAAKL,EAAEM,QAGT,SAAC,KAAD,CAAKF,IAAKG,EAAYF,IAAKL,EAAEM,UAGjC,UAAC,KAAD,YACE,SAAC,KAAD,UAAQN,EAAEM,QACV,uCAAeN,EAAEQ,kBAbZR,EAAES,GAiBd,KAGR,C,wJCpDD,IAAMC,EAAa,mCACbC,EAAW,gCAEJC,EAAmB,WAC9B,OAAOC,MAAM,GAAD,OAAIF,EAAJ,sCAA0CD,IAAcnB,MAClE,SAAAuB,GACE,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GAEJ,EAEYC,EAAiB,SAAAC,GAC5B,OAAOR,MAAM,GAAD,OACPF,EADO,gCACyBD,EADzB,kBAC6CW,IACvD9B,MAAK,SAAAuB,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,EAEYG,EAAkB,SAAAnC,GAC7B,OAAO0B,MAAM,GAAD,OAAIF,EAAJ,iBAAqBxB,EAArB,oBAAwCuB,IAAcnB,MAChE,SAAAuB,GACE,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GAEJ,EAEY7B,EAAe,SAAAH,GAC1B,OAAO0B,MAAM,GAAD,OACPF,EADO,iBACUxB,EADV,4BACqCuB,IAC/CnB,MAAK,SAAAuB,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,EACYI,EAAkB,SAAApC,GAC3B,OAAO0B,MAAM,GAAD,OACPF,EADO,iBACUxB,EADV,4BACqCuB,IAC/CnB,MAAK,SAAAuB,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,C","sources":["pages/Cast.js","services/Api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCast } from '../services/Api'\nimport DefaultImg from '../Images/DefaultImg.jpg';\nimport {\n  Ul,\n  Li,\n  Title,\n  ContainerImg,\n  ContainerTitleCast,\n  Img,\n} from '../components/styled';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieCast(movieId)\n      .then(data => {\n        setMovieCast(data.cast);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  return (\n    <Ul>\n      {movieCast.length > 0 &&\n        movieCast.map(c => {\n          return (\n            <Li key={c.id}>\n              <ContainerImg>\n                {c.profile_path !== null && c.profile_path !== undefined ? (\n                  <Img\n                    src={`https://image.tmdb.org/t/p/w500${c.profile_path}`}\n                    alt={c.name}\n                  />\n                ) : (\n                  <Img src={DefaultImg} alt={c.name} />\n                )}\n              </ContainerImg>\n              <ContainerTitleCast>\n                <Title>{c.name}</Title>\n                <p>Character: {c.character}</p>\n              </ContainerTitleCast>\n            </Li>\n          );\n        })}\n    </Ul>\n  );\n};\n\nexport default Cast;\n","const MY_API_KEY = 'ceffe16ccd7d46ce9932d25cc21ec8d8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovie = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getSearchMovie = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${MY_API_KEY}&query=${query}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${MY_API_KEY}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\nexport const getMovieReviews = movieId => {\n    return fetch(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${MY_API_KEY}`\n    ).then(response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    });\n  };\n  \n"],"names":["useState","movieCast","setMovieCast","movieId","useParams","useEffect","getMovieCast","then","data","cast","catch","error","console","Ul","length","map","c","Li","profile_path","undefined","src","alt","name","DefaultImg","character","id","MY_API_KEY","BASE_URL","getTrendingMovie","fetch","response","ok","json","Promise","reject","Error","getSearchMovie","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}
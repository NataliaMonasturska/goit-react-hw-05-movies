{"version":3,"file":"static/js/123.2bab9592.chunk.js","mappings":"2MAsCA,UAjCgB,WACd,OAAwCA,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAYR,OAVAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBH,GACbI,MAAK,SAAAC,GACJN,EAAgBM,EAAKC,QACtB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,GACJ,GAAE,CAACR,KAGF,0BACE,wBACGF,EAAaY,OAAS,EACrBZ,EAAaa,KAAI,SAAAC,GACf,OACE,2BACE,UAAC,KAAD,sBAAuBA,EAAOC,WAC9B,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,KAED,uEAKT,C,wJCrCD,IAAMC,EAAa,mCACbC,EAAW,gCAEJC,EAAmB,WAC9B,OAAOC,MAAM,GAAD,OAAIF,EAAJ,sCAA0CD,IAAcZ,MAClE,SAAAgB,GACE,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GAEJ,EAEYC,EAAiB,SAAAC,GAC5B,OAAOR,MAAM,GAAD,OACPF,EADO,gCACyBD,EADzB,kBAC6CW,IACvDvB,MAAK,SAAAgB,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,EAEYG,EAAkB,SAAA5B,GAC7B,OAAOmB,MAAM,GAAD,OAAIF,EAAJ,iBAAqBjB,EAArB,oBAAwCgB,IAAcZ,MAChE,SAAAgB,GACE,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GAEJ,EAEYI,EAAe,SAAA7B,GAC1B,OAAOmB,MAAM,GAAD,OACPF,EADO,iBACUjB,EADV,4BACqCgB,IAC/CZ,MAAK,SAAAgB,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,EACYtB,EAAkB,SAAAH,GAC3B,OAAOmB,MAAM,GAAD,OACPF,EADO,iBACUjB,EADV,4BACqCgB,IAC/CZ,MAAK,SAAAgB,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,C","sources":["pages/Reviews.js","services/Api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from '../services/Api';\nimport { TitleReview } from '../components/styled'\n\nconst Reviews = () => {\n  const [movieReviews, setmovieReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(data => {\n        setmovieReviews(data.results);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {movieReviews.length > 0 ? (\n          movieReviews.map(review => {\n            return (\n              <li key={review.id}>\n                <TitleReview >Author: {review.author}</TitleReview >\n                <p>{review.content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <p>We don`t have any reviews for this movie</p>\n        )}\n      </ul>\n    </div>\n  );\n};\nexport default Reviews;\n","const MY_API_KEY = 'ceffe16ccd7d46ce9932d25cc21ec8d8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovie = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getSearchMovie = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${MY_API_KEY}&query=${query}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${MY_API_KEY}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\nexport const getMovieReviews = movieId => {\n    return fetch(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${MY_API_KEY}`\n    ).then(response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    });\n  };\n  \n"],"names":["useState","movieReviews","setmovieReviews","movieId","useParams","useEffect","getMovieReviews","then","data","results","catch","error","console","length","map","review","author","content","id","MY_API_KEY","BASE_URL","getTrendingMovie","fetch","response","ok","json","Promise","reject","Error","getSearchMovie","query","getMovieDetails","getMovieCast"],"sourceRoot":""}
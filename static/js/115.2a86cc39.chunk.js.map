{"version":3,"file":"static/js/115.2a86cc39.chunk.js","mappings":"+NA2EA,UA3Da,WACX,OAAkCA,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAeR,OAbAE,EAAAA,EAAAA,YAAU,WACRH,GAAa,IACbI,EAAAA,EAAAA,IAAaH,GACVI,MAAK,SAAAC,GACJR,EAAaQ,EAAKC,KACnB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,IAAEE,SAAQ,WACTX,GAAa,EACd,GACJ,GAAE,CAACC,KAGF,UAAC,KAAD,YACIF,GAAaF,EAAUe,OAAS,IAE9B,SAAC,EAAAC,GAAD,UACGhB,EAAUiB,KAAI,SAAAC,GACb,OACE,UAAC,EAAAC,GAAD,YACE,SAAC,KAAD,UACsB,OAAnBD,EAAEE,mBAA4CC,IAAnBH,EAAEE,cAC5B,SAAC,KAAD,CACEE,IAAG,yCAAoCJ,EAAEE,cACzCG,IAAKL,EAAEM,QAGT,SAAC,KAAD,CAAKF,IAAKG,EAAYF,IAAKL,EAAEM,UAGjC,UAAC,KAAD,YACE,SAAC,KAAD,UAAQN,EAAEM,QACV,uCAAeN,EAAEQ,kBAbZR,EAAES,GAiBd,MAINzB,IAAc,SAAC,KAAD,WACb,SAAC,KAAD,CACE0B,YAAY,UACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,MACNC,SAAS,QAKlB,C,wJCzED,IAAMC,EAAa,mCACbC,EAAW,gCAEJC,EAAmB,WAC9B,OAAOC,MAAM,GAAD,OAAIF,EAAJ,sCAA0CD,IAAczB,MAClE,SAAA6B,GACE,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GAEJ,EAEYC,EAAiB,SAAAC,GAC5B,OAAOR,MAAM,GAAD,OACPF,EADO,gCACyBD,EADzB,kBAC6CW,IACvDpC,MAAK,SAAA6B,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,EAEYG,EAAkB,SAAAzC,GAC7B,OAAOgC,MAAM,GAAD,OAAIF,EAAJ,iBAAqB9B,EAArB,oBAAwC6B,IAAczB,MAChE,SAAA6B,GACE,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GAEJ,EAEYnC,EAAe,SAAAH,GAC1B,OAAOgC,MAAM,GAAD,OACPF,EADO,iBACU9B,EADV,4BACqC6B,IAC/CzB,MAAK,SAAA6B,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,EACYI,EAAkB,SAAA1C,GAC3B,OAAOgC,MAAM,GAAD,OACPF,EADO,iBACU9B,EADV,4BACqC6B,IAC/CzB,MAAK,SAAA6B,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,C","sources":["pages/Cast.js","services/Api.js"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieCast } from '../services/Api'\nimport DefaultImg from '../Images/DefaultImg.jpg';\nimport { RotatingLines } from 'react-loader-spinner';\nimport {\n  Ul,\n  Li,\n  Title,\n  ContainerImg,\n  ContainerTitleCast,\n  Img,\n  ContainerFlex,\n  Loader\n} from '../components/styled';\n\nconst Cast = () => {\n  const [movieCast, setMovieCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    setIsLoading(true);\n    getMovieCast(movieId)\n      .then(data => {\n        setMovieCast(data.cast);\n      })\n      .catch(error => {\n        console.error(error);\n      }).finally(() => {\n        setIsLoading(false);\n      });\n  }, [movieId]);\n\n  return (\n    <ContainerFlex>\n      {!isLoading && movieCast.length > 0 &&\n        (\n          <Ul>\n            {movieCast.map(c => {\n              return (\n                <Li key={c.id}>\n                  <ContainerImg>\n                    {c.profile_path !== null && c.profile_path !== undefined ? (\n                      <Img\n                        src={`https://image.tmdb.org/t/p/w500${c.profile_path}`}\n                        alt={c.name}\n                      />\n                    ) : (\n                      <Img src={DefaultImg} alt={c.name} />\n                    )}\n                  </ContainerImg>\n                  <ContainerTitleCast>\n                    <Title>{c.name}</Title>\n                    <p>Character: {c.character}</p>\n                  </ContainerTitleCast>\n                </Li>\n              );\n            })}\n          </Ul>\n        )\n      }\n      {isLoading && (<Loader>\n        <RotatingLines\n          strokeColor=\"#3f51b5\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"150\"\n          visible={true}\n        />\n      </Loader>)}\n    </ContainerFlex>\n  )\n}\n\nexport default Cast;\n","const MY_API_KEY = 'ceffe16ccd7d46ce9932d25cc21ec8d8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovie = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getSearchMovie = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${MY_API_KEY}&query=${query}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${MY_API_KEY}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\nexport const getMovieReviews = movieId => {\n    return fetch(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${MY_API_KEY}`\n    ).then(response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    });\n  };\n  \n"],"names":["useState","movieCast","setMovieCast","isLoading","setIsLoading","movieId","useParams","useEffect","getMovieCast","then","data","cast","catch","error","console","finally","length","Ul","map","c","Li","profile_path","undefined","src","alt","name","DefaultImg","character","id","strokeColor","strokeWidth","animationDuration","width","visible","MY_API_KEY","BASE_URL","getTrendingMovie","fetch","response","ok","json","Promise","reject","Error","getSearchMovie","query","getMovieDetails","getMovieReviews"],"sourceRoot":""}
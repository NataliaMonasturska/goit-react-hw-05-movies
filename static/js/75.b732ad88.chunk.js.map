{"version":3,"file":"static/js/75.b732ad88.chunk.js","mappings":"uQAAA,IAAMA,EAAa,mCACbC,EAAW,gCAEJC,EAAmB,WAC9B,OAAOC,MAAM,GAAD,OAAIF,EAAJ,sCAA0CD,IAAcI,MAClE,SAAAC,GACE,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GAEJ,EAEYC,EAAiB,SAAAC,GAC5B,OAAOT,MAAM,GAAD,OACPF,EADO,gCACyBD,EADzB,kBAC6CY,IACvDR,MAAK,SAAAC,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,EAEYG,EAAkB,SAAAC,GAC7B,OAAOX,MAAM,GAAD,OAAIF,EAAJ,iBAAqBa,EAArB,oBAAwCd,IAAcI,MAChE,SAAAC,GACE,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GAEJ,EAEYK,EAAe,SAAAD,GAC1B,OAAOX,MAAM,GAAD,OACPF,EADO,iBACUa,EADV,4BACqCd,IAC/CI,MAAK,SAAAC,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,EACYM,EAAkB,SAAAF,GAC3B,OAAOX,MAAM,GAAD,OACPF,EADO,iBACUa,EADV,4BACqCd,IAC/CI,MAAK,SAAAC,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,C,8HC9CGO,EAAKC,EAAAA,GAAAA,GAAH,iGAKFC,EAAMD,EAAAA,GAAAA,IAAH,yHAOHE,EAAKF,EAAAA,GAAAA,GAAH,kLAUFG,EAAKH,EAAAA,GAAAA,GAAH,yiBAmBFI,EAAQJ,EAAAA,GAAAA,EAAH,wFAMLK,EAAeL,EAAAA,GAAAA,IAAH,0CAGZM,EAAiBN,EAAAA,GAAAA,IAAH,+GAMdO,EAAgBP,EAAAA,GAAAA,IAAH,uFA6CnB,UAvCa,WACX,OAA4CQ,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACMC,GAAWC,EAAAA,EAAAA,MAajB,OAXAC,EAAAA,EAAAA,YAAU,YACR7B,EAAAA,EAAAA,MACGE,MAAK,SAAA4B,GACJJ,EAAkBI,EAAKC,QAExB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,GACJ,GAAE,KAGA,UAACV,EAAD,YACC,SAACR,EAAD,8BACA,SAACG,EAAD,UACGO,EAAeU,OAAS,GACvBV,EAAeW,KAAI,SAAAC,GAAK,OACtB,SAAClB,EAAD,WACE,UAAC,KAAD,CAAMmB,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMd,GAAhD,WACE,SAACN,EAAD,WACE,SAACJ,EAAD,CACEyB,IAAG,yCAAoCL,EAAMM,aAC7CC,IAAKP,EAAMQ,WAGf,SAACvB,EAAD,WACE,SAACF,EAAD,UAAQiB,EAAMQ,cATXR,EAAME,GADO,QAkBjC,C","sources":["components/Api.js","pages/Home/Home.js"],"sourcesContent":["const MY_API_KEY = 'ceffe16ccd7d46ce9932d25cc21ec8d8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovie = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getSearchMovie = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${MY_API_KEY}&query=${query}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${MY_API_KEY}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\nexport const getMovieReviews = movieId => {\n    return fetch(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${MY_API_KEY}`\n    ).then(response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    });\n  };\n  \n","import { useEffect, useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getTrendingMovie } from '../../components/Api';\nimport styled from 'styled-components';\nconst H1 = styled.h1`\n  font-size: 34px;\n  /* text-align: center; */\n  margin-bottom: 30px;\n`;\nconst Img = styled.img`\n  width: 100%;\n  height: 100%;\n  display: block;\n  margin-bottom: 5px;\n  object-fit: cover;\n`;\nconst Ul = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-evenly;\n  margin-left: auto;\n  margin-right: auto;\n  margin: -35px;\n  padding: 0;\n  \n`;\nconst Li = styled.li`\n  width: 300px;\n  height: 525px;\n  margin: 35px;\n  border: 1px solid black;\n  border-radius: 5px;\n  background-color: white;\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 1.2;\n  box-shadow: 14px 14px 28px rgba(0, 0, 0, 0.25),\n    0 10px 10px rgba(0, 0, 0, 0.22);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1),  box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    box-shadow: 14px 25px 40px rgba(0, 0, 0, 0.25),\n      0 10px 10px rgba(0, 0, 0, 0.22);\n    transform: scale(1.1);\n  }\n`;\nconst Title = styled.p`\n  text-align: center;\n  line-height: 1.3;\n  font-size: 20px;\n`;\n\nconst ContainerImg = styled.div`\n  height: 450px;\n`;\nconst ContainerTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 75px;\n`;\nconst ContainerHome = styled.div`\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\n`\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const location = useLocation();\n\n  useEffect(() => {\n    getTrendingMovie()\n      .then(data => {\n        setTrendingMovies(data.results);\n        // console.log(data.results);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, []);\n\n  return (\n     <ContainerHome>\n      <H1>Trending today</H1>\n      <Ul>\n        {trendingMovies.length > 0 &&\n          trendingMovies.map(Movie => (\n            <Li key={Movie.id}>\n              <Link to={`/movies/${Movie.id}`} state={{ from: location }}>\n                <ContainerImg>\n                  <Img\n                    src={`https://image.tmdb.org/t/p/w500${Movie.poster_path}`}\n                    alt={Movie.title}\n                  />\n                </ContainerImg>\n                <ContainerTitle>\n                  <Title>{Movie.title}</Title>\n                </ContainerTitle>\n              </Link>\n            </Li>\n          ))}\n      </Ul>\n      </ContainerHome>\n  );\n};\nexport default Home;\n"],"names":["MY_API_KEY","BASE_URL","getTrendingMovie","fetch","then","response","ok","json","Promise","reject","Error","getSearchMovie","query","getMovieDetails","movieId","getMovieCast","getMovieReviews","H1","styled","Img","Ul","Li","Title","ContainerImg","ContainerTitle","ContainerHome","useState","trendingMovies","setTrendingMovies","location","useLocation","useEffect","data","results","catch","error","console","length","map","Movie","to","id","state","from","src","poster_path","alt","title"],"sourceRoot":""}
{"version":3,"file":"static/js/804.0896bee8.chunk.js","mappings":"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","sources":["components/Api.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["const MY_API_KEY = 'ceffe16ccd7d46ce9932d25cc21ec8d8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovie = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getSearchMovie = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${MY_API_KEY}&query=${query}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${MY_API_KEY}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\nexport const getMovieReviews = movieId => {\n    return fetch(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${MY_API_KEY}`\n    ).then(response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    });\n  };\n  \n","import {\n  Link,\n  NavLink,\n  Outlet,\n  useLocation,\n  useParams,\n} from 'react-router-dom';\nimport { useEffect, useState, Suspense } from 'react';\nimport { getMovieDetails } from '../../components/Api';\nimport styled from 'styled-components';\nimport { RotatingLines } from 'react-loader-spinner';\nconst Scrolling = require('react-scroll');\nconst scroll = Scrolling.animateScroll;\nconst GoBack = styled.div`\n  width: 100px;\n  height: 50px;\n  border-radius: 25px;\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n  background-color: #87cefa;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 20px;\n  font-weight: 600;\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  :hover {\n    background-color: black;\n    color: #87cefa;\n  }\n`;\nconst Container = styled.div`\n  width: 1870px;\n`;\nconst ContainerImg = styled.div`\n  height: 450px;\n  width: 300px;\n`;\nconst Img = styled.img`\n  width: 100%;\n  height: 100%;\n  display: block;\n  margin-bottom: 5px;\n  object-fit: cover;\n`;\n\nconst About = styled.div`\n  width: 1000px;\n  margin-left: 20px;\n`;\nconst ContainerImgAndAbout = styled.div`\n  display: flex;\n  margin-top: 20px;\n  border: 1px solid black;\n  padding: 20px;\n  box-shadow: 14px 14px 28px rgba(0, 0, 0, 0.25),\n    0 10px 10px rgba(0, 0, 0, 0.22);\n  margin-bottom: 50px;\n  /* width:100%; */\n`;\nconst TitleDetails = styled.h2`\n  font-weight: 600;\n  margin-bottom: 20px;\n`;\nconst Text = styled.p`\n  font-weight: 600;\n  font-size: 18px;\n  margin-top: 20px;\n  margin-bottom: 10px;\n`;\nconst Genres = styled.p`\n  font-weight: 600;\n  margin-top: 20px;\n  margin-bottom: 10px;\n`;\nconst GenresList = styled.ul`\n  display: flex;\n  padding: 0;\n`;\nconst Genre = styled.li`\n  :not(:last-child) {\n    margin-right: 10px;\n  }\n`;\nconst AdditionalList = styled.ul`\n  display: flex;\n  padding: 0;\n`;\n\nconst AdditionalInformationContainer = styled.div`\n  border: 1px solid black;\n  padding: 20px;\n  box-shadow: 14px 14px 28px rgba(0, 0, 0, 0.25),\n    0 10px 10px rgba(0, 0, 0, 0.22);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-weight: 600;\n  font-size: 24px;\n  margin-bottom: 50px;\n`;\nconst ItemCastReviews = styled.li`\n  font-weight: 400;\n  font-size: 24px;\n  :first-child {\n    margin-right: 20px;\n  }\n`;\nconst StyledLink = styled(NavLink)`\n  &.active {\n    color: #dc143c;\n  }\n`;\nconst Loader = styled.div`\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n`;\nconst ContainerOutlet = styled.div`\n  display: flex;\n  align-items: center;\n`;\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState({});\n  const [releaseDate, setReleaseDate] = useState('');\n  const [genres, setGenres] = useState([]);\n  const location = useLocation();\n  const linkToBack = location.state?.from ?? '/Home';\n  const YearNormalize = releaseDate.slice(0, 4);\n  const percent = Math.round(movie.vote_average * 10);\n  const overview = movie.overview;\n  const { movieId } = useParams();\n  const img =\n    movie.poster_path !== null && movie.poster_path !== undefined\n      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n      : '';\n\n  useEffect(() => {\n    getMovieDetails(movieId).then(data => {\n      setMovie(data);\n      setReleaseDate(data.release_date);\n      setGenres(data.genres);\n      // console.log(data.genres);\n    });\n  }, [movieId]);\n\n  const scrolling = () => {\n    scroll.scrollTo(600);\n  };\n\n  return (\n    <Container>\n      <Link to={linkToBack}>\n        <GoBack>Go back</GoBack>\n      </Link>\n      <ContainerImgAndAbout>\n        <ContainerImg>\n          <Img src={`${img}`} alt={movie.title} />\n        </ContainerImg>\n        <About>\n          <TitleDetails>\n            {movie.title} ({YearNormalize})\n          </TitleDetails>\n          <p>User Score: {percent}%</p>\n          <Text>Overview</Text>\n          <p>{overview}</p>\n          <Genres>Genres</Genres>\n          <GenresList>\n            {genres.length > 0 &&\n              genres.map(genre => (\n                <Genre key={genre.id}>\n                  <p>{genre.name}</p>\n                </Genre>\n              ))}\n          </GenresList>\n        </About>\n      </ContainerImgAndAbout>\n      <AdditionalInformationContainer onClick={scrolling}>\n        <p>Additional information</p>\n        <AdditionalList>\n          <ItemCastReviews>\n            <StyledLink to=\"cast\">Cast</StyledLink>\n          </ItemCastReviews>\n          <ItemCastReviews>\n            <StyledLink to=\"reviews\">Reviews</StyledLink>\n          </ItemCastReviews>\n        </AdditionalList>\n      </AdditionalInformationContainer>\n      <ContainerOutlet>\n        <Suspense\n          fallback={\n            <Loader>\n              <RotatingLines\n                strokeColor=\"#3f51b5\"\n                strokeWidth=\"5\"\n                animationDuration=\"0.75\"\n                width=\"150\"\n                visible={true}\n              />\n            </Loader>\n          }\n        >\n          <Outlet />\n        </Suspense>\n      </ContainerOutlet>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["MY_API_KEY","BASE_URL","getTrendingMovie","fetch","then","response","ok","json","Promise","reject","Error","getSearchMovie","query","getMovieDetails","movieId","getMovieCast","getMovieReviews","scroll","require","animateScroll","GoBack","styled","Container","ContainerImg","Img","About","ContainerImgAndAbout","TitleDetails","Text","Genres","GenresList","Genre","AdditionalList","AdditionalInformationContainer","ItemCastReviews","StyledLink","NavLink","Loader","ContainerOutlet","useState","movie","setMovie","releaseDate","setReleaseDate","genres","setGenres","linkToBack","useLocation","state","from","YearNormalize","slice","percent","Math","round","vote_average","overview","useParams","img","poster_path","undefined","useEffect","data","release_date","to","src","alt","title","length","map","genre","name","id","onClick","scrollTo","Suspense","fallback","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}
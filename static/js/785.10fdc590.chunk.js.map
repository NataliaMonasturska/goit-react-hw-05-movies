{"version":3,"file":"static/js/785.10fdc590.chunk.js","mappings":"wQAAA,IAAMA,EAAa,mCACbC,EAAW,gCAEJC,EAAmB,WAC9B,OAAOC,MAAM,GAAD,OAAIF,EAAJ,sCAA0CD,IAAcI,MAClE,SAAAC,GACE,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GAEJ,EAEYC,EAAiB,SAAAC,GAC5B,OAAOT,MAAM,GAAD,OACPF,EADO,gCACyBD,EADzB,kBAC6CY,IACvDR,MAAK,SAAAC,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,EAEYG,EAAkB,SAAAC,GAC7B,OAAOX,MAAM,GAAD,OAAIF,EAAJ,iBAAqBa,EAArB,oBAAwCd,IAAcI,MAChE,SAAAC,GACE,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GAEJ,EAEYK,EAAe,SAAAD,GAC1B,OAAOX,MAAM,GAAD,OACPF,EADO,iBACUa,EADV,4BACqCd,IAC/CI,MAAK,SAAAC,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,EACYM,EAAkB,SAAAF,GAC3B,OAAOX,MAAM,GAAD,OACPF,EADO,iBACUa,EADV,4BACqCd,IAC/CI,MAAK,SAAAC,GACL,OAAOA,EAASC,GACZD,EAASE,OACTC,QAAQC,OAAO,IAAIC,MAAM,aAC9B,GACF,C,2FCZH,UAjCgB,WACd,OAAwCO,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACQL,GAAYM,EAAAA,EAAAA,MAAZN,QAYR,OAVAO,EAAAA,EAAAA,YAAU,YACRL,EAAAA,EAAAA,IAAgBF,GACbV,MAAK,SAAAkB,GACJH,EAAgBG,EAAKC,QACtB,IACAC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EACf,GACJ,GAAE,CAACX,KAGF,0BACE,wBACGI,EAAaS,OAAS,EACrBT,EAAaU,KAAI,SAAAC,GACf,OACE,2BACE,UAAC,KAAD,sBAAuBA,EAAOC,WAC9B,uBAAID,EAAOE,YAFJF,EAAOG,GAKnB,KAED,uEAKT,C","sources":["components/Api.js","components/Reviews/Reviews.js"],"sourcesContent":["const MY_API_KEY = 'ceffe16ccd7d46ce9932d25cc21ec8d8';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrendingMovie = () => {\n  return fetch(`${BASE_URL}trending/movie/day?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getSearchMovie = query => {\n  return fetch(\n    `${BASE_URL}search/movie?api_key=${MY_API_KEY}&query=${query}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\n\nexport const getMovieDetails = movieId => {\n  return fetch(`${BASE_URL}movie/${movieId}?api_key=${MY_API_KEY}`).then(\n    response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    }\n  );\n};\n\nexport const getMovieCast = movieId => {\n  return fetch(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${MY_API_KEY}`\n  ).then(response => {\n    return response.ok\n      ? response.json()\n      : Promise.reject(new Error('Not found'));\n  });\n};\nexport const getMovieReviews = movieId => {\n    return fetch(\n      `${BASE_URL}movie/${movieId}/reviews?api_key=${MY_API_KEY}`\n    ).then(response => {\n      return response.ok\n        ? response.json()\n        : Promise.reject(new Error('Not found'));\n    });\n  };\n  \n","import { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getMovieReviews } from '../../components/Api';\nimport { TitleReview } from '../../components/styled'\n\nconst Reviews = () => {\n  const [movieReviews, setmovieReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    getMovieReviews(movieId)\n      .then(data => {\n        setmovieReviews(data.results);\n      })\n      .catch(error => {\n        console.error(error);\n      });\n  }, [movieId]);\n\n  return (\n    <div>\n      <ul>\n        {movieReviews.length > 0 ? (\n          movieReviews.map(review => {\n            return (\n              <li key={review.id}>\n                <TitleReview >Author: {review.author}</TitleReview >\n                <p>{review.content}</p>\n              </li>\n            );\n          })\n        ) : (\n          <p>We don`t have any reviews for this movie</p>\n        )}\n      </ul>\n    </div>\n  );\n};\nexport default Reviews;\n"],"names":["MY_API_KEY","BASE_URL","getTrendingMovie","fetch","then","response","ok","json","Promise","reject","Error","getSearchMovie","query","getMovieDetails","movieId","getMovieCast","getMovieReviews","useState","movieReviews","setmovieReviews","useParams","useEffect","data","results","catch","error","console","length","map","review","author","content","id"],"sourceRoot":""}